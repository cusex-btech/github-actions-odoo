name: Production Deployment

on:
  pull_request:
    types:
      - closed
    branches:
      - production
jobs:
  if-merged:
    name: Merge Success
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo The Staging PR was merged into Production

    - name: Telegram Notification
      if: ${{ failure() }}
      uses: xinthink/action-telegram@v1.1
      with:
        botToken: ${{ secrets.TELE_BOT_TOKEN }}
        chatId: ${{ secrets.TELE_CHAT_ID }}
        jobStatus: ${{ job.status }}
        skipSuccess: true

  deploy-production:
    name: Deploy Production
    needs: if-merged
    runs-on: self-hosted
    environment:
      name: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: production

      - name: Get Version
        id: get-version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: ArgoCD Deploy to Production
        run: |
          argocd login --insecure  ${{ secrets.ARGOCD_SERVER }} --username  ${{ secrets.ARGOCD_USER }} --password  ${{ secrets.ARGOCD_PASS}}
          argocd app create odoo-prod --project default --repo https://cx-harbor.btech.id/chartrepo/cusex --helm-chart odoo --revision ${{ steps.get-version.outputs.VERSION }} --values values-prod.yaml --dest-namespace odoo-prod --dest-server https://kubernetes.default.svc --upsert
          argocd --grpc-web app sync odoo-prod --force
          argocd --grpc-web app wait odoo-prod --timeout 600

      - name: Telegram Notification
        if: cancelled() == false
        uses: xinthink/action-telegram@v1.1
        with:
          botToken: ${{ secrets.TELE_BOT_TOKEN }}
          chatId: ${{ secrets.TELE_CHAT_ID }}
          jobStatus: ${{ job.status }}
          skipSuccess: false
